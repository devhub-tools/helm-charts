apiVersion: apps/v1
kind: Deployment
metadata:
  name: devhub
  labels:
    {{- include "Devhub.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{- include "Devhub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "Devhub.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "Devhub.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: devhub
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
            - name: postgres-proxy
              containerPort: 54320
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /_health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env: &env
            - name: APP_HOST
              value: {{ .Values.devhub.host }}
            - name: APP_VERSION
              value: {{ .Values.image.tag | default .Chart.AppVersion }}
            - name: DB_SSL
              value: {{ .Values.devhub.database.ssl.mode | quote }}
            {{- with .Values.devhub.auth.emailHeader }}
            - name: AUTH_EMAIL_HEADER
              value: {{ . | quote }}
            {{- end }}
            {{- with .Values.devhub.proxy.command }}
            - name: PROXY_COMMAND
              value: {{ . | quote }}
            {{- end }}
            {{- with .Values.devhub.proxy.instructions }}
            - name: PROXY_INSTRUCTIONS
              value: {{ . | quote }}
            {{- end }}
            {{- if .Values.devhub.agent }}
            - name: AGENT
              value: "true"
            {{- end }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- range .Values.extraEnvVars }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          volumeMounts: &volumeMounts
          - name: config
            mountPath: "/etc/secrets/app"
            readOnly: true
          {{- with .Values.devhub.database.secret }}
          - name: database-config
            mountPath: "/etc/secrets/db"
            readOnly: true
          {{- end }}
          {{- with .Values.devhub.database.ssl.caSecret }}
          - name: database-ca
            mountPath: "/etc/secrets/ca"
            readOnly: true
          {{- end }}
          {{- with .Values.devhub.database.ssl.clientCertSecret }}
          - name: database-client-cert
            mountPath: "/etc/secrets/client-cert"
            readOnly: true
          {{- end }}
          {{- with .Values.devhub.proxy.tls.secret }}
          - name: proxy-tls
            mountPath: "/etc/secrets/proxy"
            readOnly: true
          {{- end }}
      {{- if not .Values.devhub.agent }}
        - name: query-parser
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.queryParser.image.repository }}:{{ .Values.queryParser.image.tag }}"
          imagePullPolicy: {{ .Values.queryParser.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 50051
              protocol: TCP
        - name: request-tracer
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.requestTracer.image.repository }}:{{ .Values.requestTracer.image.tag }}"
          imagePullPolicy: {{ .Values.requestTracer.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 50052
              protocol: TCP
      initContainers:
        - name: database-ready
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - ./bin/devhub
            - eval
            - Devhub.Release.wait_for_database_ready()
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env: *env
          volumeMounts: *volumeMounts
        - name: devhub-migrations
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - ./bin/devhub
            - eval
            - Devhub.Release.migrate()
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env: *env
          volumeMounts: *volumeMounts
      {{- end }}
      volumes:
      - name: config
        secret:
          secretName: {{ .Values.devhub.secret }}
      {{- with .Values.devhub.database.secret }}
      - name: database-config
        secret:
          secretName: {{ . }}
      {{- end }}
      {{- with .Values.devhub.database.ssl.caSecret }}
      - name: database-ca
        secret:
          secretName: {{ . }}
      {{- end }}
      {{- with .Values.devhub.database.ssl.clientCertSecret }}
      - name: database-client-cert
        secret:
          secretName: {{ . }}
      {{- end }}
      {{- with .Values.devhub.proxy.tls.secret }}
      - name: proxy-tls
        secret:
          secretName: {{ . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
