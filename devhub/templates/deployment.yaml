apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "DevHub.fullname" . }}
  labels:
    {{- include "DevHub.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{- include "DevHub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "DevHub.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "DevHub.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: devhub
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_health
              port: http
          readinessProbe:
            httpGet:
              path: /_health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: APP_HOST
              value: {{ .Values.devhub.host }}
            - name: LOGIN_METHOD
              value: {{ .Values.devhub.loginMethod }}
            {{- if .Values.devhub.agent }}
            - name: AGENT
              value: "true"
            - name: AGENT_CONFIG_FILE
              value: /etc/secrets/agent-config.json
            {{- end }}
          volumeMounts:
          - name: config
            mountPath: "/etc/secrets"
            readOnly: true
          {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- if not .Values.devhub.agent }}
        - name: query-parser
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.queryParser.image.repository }}:{{ .Values.queryParser.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 50051
              protocol: TCP
      initContainers:
        - name: devhub-migrations
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - ./bin/devhub
            - eval
            - DevHub.Release.migrate()
          env:
            - name: APP_HOST
              value: {{ .Values.devhub.host }}
            - name: LOGIN_METHOD
              value: {{ .Values.devhub.loginMethod }}
          volumeMounts:
          - name: config
            mountPath: "/etc/secrets"
            readOnly: true
          {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- end }}
      volumes:
      - name: config
        secret:
          secretName: {{ .Values.devhub.configSecretName }}
      {{- with .Values.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
